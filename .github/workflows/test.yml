---
# Github workflow for Notation Azure Key Vault plugin
name: test

on:
  push:
    branches:
      - main
      - release-*
  pull_request:

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          DEFAULT_WORKSPACE: ./Notation.Plugin.AzureKeyVault
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .*Tests/.*
          VALIDATE_MARKDOWN: false
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: "Build"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Check out code into the project directory
        uses: actions/checkout@v3
      - name: Run unit tests
        run: make test
      - name: Build testing
        run: make build
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Check out code into the project directory
        uses: actions/checkout@v3
      - name: Build bianry
        run: ./scripts/build.sh v0.0.1 linux-x64
      - name: Run download server locally
        run: |
          # start the server
          nohup python3 ./.github/e2e/e2e-server.py &

          # prepare the environment variables for E2E
          artifactName=notation-azure-kv_0.0.1_linux_amd64.tar.gz
          checksum=$(shasum -a 256 "./bin/artifacts/$artifactName" | awk '{print $1}')
          echo "pluginChecksum=$checksum" >> $GITHUB_ENV
          echo "pluginDownloadURL=http://localhost:8000/$artifactName" >> $GITHUB_ENV
 
      - name: Prepare container registry
        run: |
          docker run  --name registry --rm -d -p 5000:5000 registry:2
          docker pull hello-world:latest
          docker tag hello-world:latest localhost:5000/hello-world:v1
          docker push localhost:5000/hello-world:v1
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: ./.github/e2e
        with:
          pluginDownloadURL: ${{ env.pluginDownloadURL }}
          pluginChecksum: ${{ env.pluginChecksum }}
---
name: Release notation-azure-kv

on:
  push:
    tags:
      - 'v*'

# Contents write required for release PRs
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        config:
          - runtime: osx-x64
            build_args: ""
            os: ubuntu-latest
          - runtime: osx-arm64
            build_args: ""
            os: ubuntu-latest
          - runtime: linux-x64
            build_args: --enable-aot
            os: ubuntu-latest
          - runtime: linux-arm64
            build_args: --enable-aot
            os: ubuntu-22.04
          - runtime: win-x64
            build_args: --enable-aot
            os: windows-2022
    name: Build
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Setup ARM64 Emulator
        if: matrix.config.runtime == 'linux-arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
      - name: Build .NET project
        shell: bash
        run: python3 ./scripts/build.py "${GITHUB_REF_NAME}" ${{ matrix.config.runtime }} ${{ matrix.config.build_args }}
      - name: Upload ${{ matrix.config.runtime }} artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.runtime }}
          path: ${{ github.workspace }}/bin/artifacts/*
          retention-days: 1
  macos_codesign:
    strategy:
      matrix:
        runtime: ["osx-x64", "osx-arm64"]
    name: Codesign
    runs-on: macos-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.runtime }}
          path: ${{ github.workspace }}/bin/artifacts
      - name: Codesign
        run: bash ./scripts/codesign.sh
      - name: Upload ${{ matrix.runtime }} artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.runtime }}
          path: ${{ github.workspace }}/bin/artifacts
          retention-days: 1
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: macos_codesign
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/bin/artifacts
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash ./scripts/release.sh "${GITHUB_REF_NAME}"
